<?php

namespace Ingresso\EventoBundle\Repository;
use Doctrine\Common\Util\Debug;

/**
 * EventoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventoRepository extends \Doctrine\ORM\EntityRepository
{
    public function getEventoPorUF($uf)
    {
        $qb = $this->_em->createQueryBuilder();
        $date = new \DateTime();
        $date2 = new \DateTime();
        $date2->add(new \DateInterval('P30D'));

        $qb->select('E')
            ->from('Ingresso\EventoBundle\Entity\Evento', 'E')
            ->where('E.uf = :uf')
            ->andWhere('E.ativo = :ativo')
            ->andWhere('E.dataEvento >= :now')
            ->andWhere('E.dataEvento <= :end')
            ->setParameter('ativo', true)
            ->setParameter('uf', $uf)
            ->setParameter('now', $date)
            ->setParameter('end', $date2);

        return $qb->getQuery()->getResult();
    }

    public function getEventoPorUFBanner($uf)
    {
        $qb = $this->_em->createQueryBuilder();

        $qb->select('E')
            ->from('Ingresso\EventoBundle\Entity\Evento', 'E')
            ->where('E.uf = :uf')
            ->andWhere('E.stBanner = :ativo')
            ->setParameter('ativo', true)
            ->setParameter('uf', $uf);

        return $qb->getQuery()->getResult();
    }

    public function getEvento($uf, $date)
    {
        $qb = $this->_em->createQueryBuilder();

        $qb->select('E')
            ->from('Ingresso\EventoBundle\Entity\Evento', 'E')
            ->where('E.ativo = :ativo')
            ->setParameter('ativo', true);

        if(($uf) && ($uf != 'null')) {
            $qb->andWhere('E.uf = :uf')
                ->setParameter('uf', $uf);
        }

        if(($date) && ($date != 0)  && ($date != 'false')) {
            $date1 = new \DateTime($date);
            $date2 = new \DateTime($date);
            $date2->add(new \DateInterval('P1D'));

            $qb->andWhere($qb->expr()->between('E.dataEvento', '\'' . $date1->format('Y-m-d') . '\'', '\'' . $date2->format('Y-m-d') . '\''));


        }

        return $qb->getQuery()->getResult();
    }
}
